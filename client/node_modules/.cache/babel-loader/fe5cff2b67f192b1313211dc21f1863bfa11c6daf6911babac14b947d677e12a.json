{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import api from'../services/api.ts';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);useEffect(()=>{const token=localStorage.getItem('token');if(token){api.get('/auth/me').then(response=>setUser(response.data)).catch(()=>logout());}},[]);const login=async token=>{localStorage.setItem('token',token);try{const response=await api.get('/auth/me');setUser(response.data);return true;}catch(error){logout();return false;}};const logout=()=>{localStorage.removeItem('token');setUser(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","api","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","token","localStorage","getItem","get","then","response","data","catch","logout","login","setItem","error","removeItem","Provider","value","useAuth"],"sources":["/Users/jimmybrake/Documents/wSuccess/client/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport api from '../services/api.ts';\n\ninterface User {\n  _id: string;\n  name: string;\n  email: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (token: string) => Promise<boolean>;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType>(null!);\n\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      api.get('/auth/me')\n        .then(response => setUser(response.data))\n        .catch(() => logout());\n    }\n  }, []);\n\n  const login = async (token: string) => {\n    localStorage.setItem('token', token);\n    try {\n      const response = await api.get('/auth/me');\n      setUser(response.data);\n      return true;\n    } catch (error) {\n      logout();\n      return false;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC7E,MAAO,CAAAC,GAAG,KAAM,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAcrC,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAkB,IAAK,CAAC,CAEzD,MAAO,MAAM,CAAAQ,YAAY,CAAGC,IAAA,EAAiD,IAAhD,CAAEC,QAAwC,CAAC,CAAAD,IAAA,CACtE,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAc,IAAI,CAAC,CAEnDD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAW,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTT,GAAG,CAACY,GAAG,CAAC,UAAU,CAAC,CAChBC,IAAI,CAACC,QAAQ,EAAIN,OAAO,CAACM,QAAQ,CAACC,IAAI,CAAC,CAAC,CACxCC,KAAK,CAAC,IAAMC,MAAM,CAAC,CAAC,CAAC,CAC1B,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,KAAK,CAAG,KAAO,CAAAT,KAAa,EAAK,CACrCC,YAAY,CAACS,OAAO,CAAC,OAAO,CAAEV,KAAK,CAAC,CACpC,GAAI,CACF,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAACY,GAAG,CAAC,UAAU,CAAC,CAC1CJ,OAAO,CAACM,QAAQ,CAACC,IAAI,CAAC,CACtB,MAAO,KAAI,CACb,CAAE,MAAOK,KAAK,CAAE,CACdH,MAAM,CAAC,CAAC,CACR,MAAO,MAAK,CACd,CACF,CAAC,CAED,KAAM,CAAAA,MAAM,CAAGA,CAAA,GAAM,CACnBP,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC,CAChCb,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,mBACEN,IAAA,CAACC,WAAW,CAACmB,QAAQ,EAACC,KAAK,CAAE,CAAEhB,IAAI,CAAEW,KAAK,CAAED,MAAO,CAAE,CAAAX,QAAA,CAClDA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAkB,OAAO,CAAGA,CAAA,GAAM3B,UAAU,CAACM,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}