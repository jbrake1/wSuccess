{"ast":null,"code":"import axios from'axios';const api=axios.create({baseURL:'http://localhost:5000/api',headers:{'Content-Type':'application/json'}});// Add request interceptor to include token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers['Authorization']=\"Bearer \".concat(token);}return config;});// Get all users\nexport const getUsers=async()=>{const response=await api.get('/users');return response.data;};export default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","concat","getUsers","response","get","data"],"sources":["/Users/jimmybrake/Documents/wSuccess/client/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor to include token\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Get all users\nexport const getUsers = async () => {\n  const response = await api.get('/users');\n  return response.data;\n};\n\nexport default api;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,GAAG,CAAGD,KAAK,CAACE,MAAM,CAAC,CACvBC,OAAO,CAAE,2BAA2B,CACpCC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,EAAK,CACvC,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,WAAAQ,MAAA,CAAaH,KAAK,CAAE,CACrD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAK,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAClC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAACc,GAAG,CAAC,QAAQ,CAAC,CACxC,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,cAAe,CAAAf,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}